{"version":3,"sources":["InfoBox.js","util.js","Maps.js","Table.js","LineGraph.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","active","title","cases","isRed","total","props","Card","className","onClick","CardContent","Typography","color","casesTypeColors","hex","multiplier","recovered","deaths","sortData","data","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","fillOpacity","fillColor","radius","Math","sqrt","Popup","style","backgroundImage","flag","Maps","countries","zoom","MapContainer","scrollWheelZoom","TileLayer","attribution","url","Table","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","console","log","fetchData","length","datasets","backgroundColor","borderColor","CircularProgress","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setmapCountries","setCasesType","loading","setLoading","name","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","FormControl","Select","variant","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fd0c43d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card , CardContent , Typography} from '@material-ui/core';\r\nimport './InfoBox.css';\r\n\r\nfunction InfoBox({active , title , cases , isRed , total , ...props}) {\r\n    return (\r\n        <div>\r\n            <Card className={`infoBox ${active && 'infoBox--selected'} ${isRed && 'infoBox--red'}`} onClick={props.onClick} >\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" className=\"infoBox__title\">\r\n                        {title}\r\n                    </Typography>\r\n                    <h2 className={`infoBox_cases ${!isRed && \"infoBox__cases--green\"}`}>{cases}</h2>\r\n                    <Typography color=\"textSecondary\" className=\"infoBox__total\">{total} Total</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react';\r\nimport numeral from \"numeral\";\r\nimport { Popup,Circle } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n      multiplier: 800,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n      multiplier: 1200,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n      multiplier: 2000,\r\n    },\r\n  };\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n    return sortedData.sort((a,b) => (a.cases > b.cases) ? -1 : 1);\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data , casesType=\"cases\") => (\r\n    data.map((country) => (\r\n        <Circle \r\n            center={[country.countryInfo.lat,country.countryInfo.long]}\r\n            fillOpacity={0.4}\r\n            color={casesTypeColors[casesType].hex}\r\n            fillColor={casesTypeColors[casesType].hex}\r\n            radius={\r\n                Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier\r\n            }\r\n        >\r\n            <Popup>\r\n            <div className=\"info-container\">\r\n                <div\r\n                    className=\"info-flag\"\r\n                    style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n                ></div>\r\n                <div className=\"info-name\">{country.country}</div>\r\n                <div className=\"info-confirmed\">\r\n                    Cases: {numeral(country.cases).format(\"0,0\")}\r\n                </div>\r\n                <div className=\"info-recovered\">\r\n                    Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n                </div>\r\n                <div className=\"info-deaths\">\r\n                    Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n                </div>\r\n            </div>\r\n            </Popup>\r\n        </Circle>\r\n    ))\r\n);","import React from 'react';\r\nimport './Maps.css';\r\nimport {MapContainer, TileLayer} from 'react-leaflet';\r\nimport { showDataOnMap } from './util';\r\n\r\nfunction Maps({ countries , casesType ,center , zoom}) {\r\n    return (\r\n        <div className=\"map\">\r\n                    <MapContainer center={center} zoom = {zoom} scrollWheelZoom={false}>\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        {showDataOnMap(countries,casesType)}\r\n                \r\n                    </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Maps;\r\n","import React from 'react'\r\nimport './Table.css';\r\nimport numeral from 'numeral';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nfunction Table({countries}) {\r\n    return (\r\n        <div className=\"table\">\r\n                {countries.map(({country , cases}) => (\r\n                    <tr>\r\n                        <td>{country}</td>\r\n                        <td><strong>{numeral(cases).format(\"0,0\")}</strong></td>\r\n                    </tr>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType=\"cases\") => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType=\"cases\" , ...props }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {data?.length > 0 ? (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;","import React, {useState , useEffect} from 'react'\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress\r\n  \r\n} from \"@material-ui/core\";\r\nimport InfoBox from './InfoBox';\r\nimport Maps from './Maps';\r\nimport './App.css';\r\nimport Table from './Table';\r\nimport { prettyPrintStat, sortData } from './util';\r\nimport LineGraph from './LineGraph';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { circleMarker } from 'leaflet';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [countries , setCountries] = useState([]);\r\n  const [country,setCountry] = useState(\"worldwide\");\r\n  const [countryInfo , setCountryInfo] = useState({});\r\n  const [tableData , setTableData] = useState([]);\r\n  const [mapCenter , setMapCenter] = useState({ lat: 34.80746 , lng: -40.4796 });\r\n  const [mapZoom , setMapZoom] = useState(3);\r\n  const [mapCountries, setmapCountries] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [loading , setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setCountryInfo(data);\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async() =>   {\r\n      setLoading(true)  \r\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2\r\n          }));\r\n\r\n          const sortedData = sortData(data);\r\n          setTableData(sortedData);\r\n          setmapCountries(data);\r\n        setCountries(countries)  \r\n        \r\n      })\r\n\r\n      setLoading(false)\r\n    }; \r\n    getCountriesData();\r\n  }, [])\r\n\r\n  const onCountryChange = async(event) =>{\r\n    setLoading(true)\r\n    const countryCode = event.target.value;\r\n    setCountry(countryCode);\r\n\r\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    await fetch(url)\r\n    .then((response) => response.json())\r\n    .then(data => {\r\n      setCountry(countryCode);\r\n      setCountryInfo(data);\r\n\r\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n      setMapZoom(4);\r\n    });\r\n\r\n    setLoading(false)\r\n  } \r\n\r\n \r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__left\">\r\n        <div className=\"app__header\">\r\n          <h1>COVID 19 TRACKER</h1>\r\n          <FormControl className=\"app__dropdown\">\r\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\r\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n              {\r\n                countries.map((country) => (\r\n                <MenuItem value={country.value}>{country.name}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n          {/* <CircularProgress /> */}\r\n        </div>\r\n        { loading ? <CircularProgress /> :\r\n        <div className=\"app__stats\"> \r\n          <InfoBox isRed active = {casesType === \"cases\"} onClick={ e => setCasesType(\"cases\")} title=\"Coronavirus Cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={prettyPrintStat(countryInfo.cases)}/>\r\n          <InfoBox active={casesType === \"recovered\"} onClick={e => {setCasesType(\"recovered\")}} title=\"Recovered\" cases = {prettyPrintStat(countryInfo.todayRecovered)} total={prettyPrintStat(countryInfo.recovered)}/>\r\n          <InfoBox isRed active={casesType === \"deaths\"} onClick={e => {setCasesType(\"deaths\")}} title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={prettyPrintStat(countryInfo.deaths)}/>\r\n          \r\n        </div>\r\n        }\r\n        <Maps casesType={casesType} countries={mapCountries} center={mapCenter} zoom={mapZoom} />\r\n      </div>\r\n      <Card className=\"app__right\">\r\n        <CardContent>\r\n          <div className=\"app__info\">\r\n            <h3>Live cases by country</h3>\r\n            {tableData ? <Table countries={tableData} /> : <CircularProgress /> }\r\n            <div className=\"graph\">\r\n              <h3 className=\"app__graphTitle\">Worldwide new {casesType}</h3>\r\n              <LineGraph className=\"app__graph\" casesType={casesType} />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}